{# defineGoType(schema)

Input: schema
Output: A Go type definition corresponding to the 
        schema's data-type. Useful for declaring 
        anonymous types and settings named fields
#}
{%- macro defineGoType(schema) %}
    {%- if schema.type() === "object" -%}
        {{ asGoStruct(schema) }}
    {%- elseif schema.type() === "array" -%}
        []{{ getGoType(schema.items()) }}
    {%- else -%}
        {{ schema.type() | toGoPrimitive(schema.format()) }}
    {%- endif %}
{%- endmacro %}

{# getGoType(schema)

    Wraps defineGoType() to return the schema's corresponding Go type identifier
    if the schema was provided one in the AsyncAPI spec.

Input: schema
Output: A Go type derived from the schema's UID. 
        If the schema was given an ID, it is converted to Go conventions.
        If the schema was defined anonymously, defineGoType() is called 
        to declare the type anonymously
#}
{%- macro getGoType(schema) %}
    {#- When not provided, AsyncAPI parser ID's anonymous schemas with '<anonymous-schema-#>' where # is a unique integer -#}
    {%- if not schema.uid() | includes("anonymous-schema-") -%}
        {{ schema.uid() | toGoPublicID }}
    {%- else -%}
        {{ defineGoType(schema) }}
    {%- endif %}
{%- endmacro %}

{# asGoStruct(schema)

Input: schema
Output: A Go struct definition
#}
{%- macro asGoStruct(schema) -%}
struct {
{%- for propertyName, property in schema.properties() -%}
    {%- set usePointer = "" if schema.required() | includes(propertyName) else "*" %}
    // {{ propertyName | toGoPublicID }} is a property defined in the AsyncAPI specification
    {{ propertyName | toGoPublicID }} {{usePointer}}{{ getGoType(property) }}
{% endfor -%}
}
{%- endmacro %}

{# messageName(schema)

Input: schema
Output: A Go type identifier of the message. 
        Derived from the message's name field, if provided. Otherwise,
        the message's UID is used.
#}
{%- macro messageName(msg) -%}
    {%- set msgName = (msg.name() | toGoPublicID) if msg.name() else (msg.uid() | toGoPublicID) -%}
    {{ msgName }}
{%- endmacro -%}